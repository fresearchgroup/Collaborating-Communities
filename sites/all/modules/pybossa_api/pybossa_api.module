<?php

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function pybossa_api_help($path, $arg) {
  switch ($path) {
    case "admin/help#pybossa_api":
      return t("Call pybossa project api to crowdsource tagging task"); 
      break; 
  }
}

/**
 * Implements hook_form_alter().
 */
 function pybossa_api_form_alter (& $form, & $form_state, $form_id) {

  if ($form_id == 'article_node_form') {
    //dpm ('hey got it');
    
    //Add the Pybossa crowd-source option
    $form ['pybossa_settings'] = array(
      '#type' => 'fieldset',
      '#title' => t("CrowdSource"),
      '#markup' => t("CrowdSource the article for tagging"), 
      '#collapsible' => TRUE,
      '#collapsed'  => FALSE,
      '#group' => 'additional_settings',
      '#tree' => TRUE,
      '#weight' => -3,
    );

    //Add the body checkbox
    $form['pybossa_settings']['body'] = array(
      '#type' => 'checkbox',
      '#title' => t("Send body field for tagging"),
      '#default_value' => 0,
      '#return_value' => 1,
    );

    //Add a question field
    $form['pybossa_settings']['crowdsource_question'] = array(
      '#type' => 'textarea',
      '#title' => t("Enter a question"),
    );

  }

 }

/**
 * Implements hook_node_presave() 
 * Sends a http request to create a task in the pybossa instance for tagging
 *
 */
function pybossa_api_node_presave ($node) {
  if (isset ($node->pybossa_settings)) {
    //dpm ($node->pybossa_settings);
    if ($node->pybossa_settings['body'] == 1)
      create_task ($node->title, $node->body[$node->language][0]['value'], $node->date, $node->pybossa_settings['crowdsource_question']);
  }
    
  
  //dpm ($node);
}


/**
 * Save content in JSON file
 *
 */
function save_json_file ($title, $body, $date, $crowdsource_question, $json_file_name) {
  dpm ('Saving to file');

  $json_object = array(
    'title' => $title,
    'type' => 'text',
    'date' => $date,
    'body' => $body,
    'question' => $crowdsource_question
  );
  
  $json_object = json_encode ($json_object, JSON_FORCE_OBJECT);
  
  $file_pointer = fopen ($json_file_name, 'w');
  fwrite ($file_pointer, $json_object);
  fclose ($file_pointer);
}


/**
* Create a task in pybossa
*/
function create_task ($title, $body, $date, $crowdsource_question) {
  dpm ('JSON object');

  $pybossa_project_id = 4856;
  $info = array (
    'body' => $body,
    'title' => $title,
    'date' => $date,
    'question' => $crowdsource_question
  );
  $json_task = array(
    'project_id' => $pybossa_project_id,
    'info' => $info
  );
  
  $json_task = json_encode ($json_task, JSON_FORCE_OBJECT);
  
  dpm ($json_task);
  send_task ($json_task);
}

/**
* Send a task in pybossa
*/
function send_task ($json_task) {
 
  // Setup cURL
  $ch = curl_init('https://crowdcrafting.org/api/task?api_key=bd32661f-0f5e-44c6-ab47-201de7c767f1');
  curl_setopt_array($ch, array(
    CURLOPT_POST => TRUE,
    CURLOPT_RETURNTRANSFER => TRUE,
    CURLOPT_HTTPHEADER => array(
        'Content-Type: application/json'
    ),
    CURLOPT_POSTFIELDS => $json_task
  ));

  // Send the request
  $response = curl_exec($ch);

  // Check for errors
  if($response === FALSE){
    die(curl_error($ch));
  }

  // Decode the response
  $responseData = json_decode($response, TRUE);
  dpm ('response');
  dpm ($responseData);

}
